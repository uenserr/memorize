@inject AuthService authService
@inject NavigationManager navigationManager

<style>
    .eye {
        padding: 0;
        border: none;
        background: none;
    }

    .valid.modified:not([type=checkbox]) {
        outline: 0px solid white;
    }

</style>

<div class="container h-100 d-flex align-items-center justify-content-center">
    <div class="row">
        <div class="col">
            @if (IsInputDataIncorrect)
            {
                <p style="color: red">Некорректные данные для входа</p>
            }
            @if (IsUserBanned)
            {
                <p style="color: red">Учетная запись заблокирована</p>
            }
            <EditForm class="form-outline mb-4" Model="@User" OnInvalidSubmit="@HandleFailedRequest" OnValidSubmit="@HandleValidRequest">
                <div class="form-outline mb-4">
                    <label class="form-label" for="form2Example1">Логин</label>
                    <InputText class="form-control"  @bind-Value="@User.Login"></InputText>
                </div>

                <div class="form-outline mb-4">

                    <label class="form-label" for="form2Example2">Пароль</label>
                    <InputText class="form-control" @bind-Value="@User.Password"></InputText>
                </div>

                <div class="row mb-4">
                    <div class="col d-flex justify-content-center">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="form2Example31" checked />
                            <label class="form-check-label" for="form2Example31"> Запомнить меня </label>
                        </div>
                    </div>

                    <div class="col">
                        <a href="#!">Забыли пароль?</a>
                    </div>
                </div>

                <button type="submit" class="btn btn-primary btn-block mb-4 w-100">Войти</button>

                <div class="text-center">
                    <p>Нет учетной записи? <a @onclick="ChangeForm" href="/auth">Регистрация</a></p>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public bool IsSignUpForm { get; set; }

    [Parameter]
    public EventCallback<bool> IsSignUpFormChanged { get; set; }

    protected User User = new User();

    public bool IsInputDataIncorrect { get; private set; }
    public bool IsUserBanned { get; private set; }

    private async Task ChangeForm()
    {
        IsSignUpForm = !IsSignUpForm;
        await IsSignUpFormChanged.InvokeAsync(IsSignUpForm);
    }

    protected void HandleFailedRequest()
    {
        IsInputDataIncorrect = true;
    }

    protected async Task HandleValidRequest()
    {
        User.RoleID = 1;
        User.Email = "post@mail";
        var userRepsonse = await authService.SignIn(User);
        if (userRepsonse != null)
        {
            if (userRepsonse.RoleID == 2)
            {
                IsInputDataIncorrect = false;
                IsUserBanned = true;
                return;
            }
            navigationManager.NavigateTo("/", true);
        }
        else
        {
            IsInputDataIncorrect = true;
            IsUserBanned = false;
        }
    }
}
