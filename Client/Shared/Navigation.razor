@inject AuthService loginService
@inject LibraryService libraryService;

<style>
    .dropdown-menu {
        margin-left: -90px;
        margin-top: 20px;
    }

    $('.navbar-collapse a').click(function(){
        $(".navbar-collapse").collapse('hide');
    });

        
}
</style>

<nav class="navbar navbar-expand-sm px-4 navbar-light bg-light fixed-top" style="border-bottom: 1px solid lightgray">
    <a class="navbar-brand" href="/"> <img src="/icon.png" style="width: 30px; height: 30px;"/> MEMORIZE</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
            aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    

    <div class="collapse navbar-collapse justify-content-end" id="navbarSupportedContent">
        <form class="form-inline my-2 my-lg-0 " style="width: 100%;">
            <input @onkeydown="QueryConfirm" @bind-value="@Query"
                   @bind-value:event="oninput" class="form-control mr-sm-2" style="width:70%; margin-left: 18%;"  placeholder="Поиск" />
        </form>
        <ul class="navbar-nav mr-auto">

            @if (CurrentUser != null)
            {
                <li class="nav-item active" style="width: 120px;">
                    <a class="nav-link d-inline-flex align-items-center" href="@($"{CurrentUser.Login}/Library")">
                        Библиотека
                        <span class="badge rounded-pill bg-danger ">@CardsLearnCount</span>
                    </a>
                </li>
            }    

            
        </ul>
        <div class="dropdown">
            @if (CurrentUser != null)
            {
                <button type="button" class=" btn-circle dropdown" id="dropdownMenuButton"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <i class="bi bi-person h4"></i>
                </button>
            }
            else
            {
                <button @onclick="GoToAuthPage" type="button" class=" btn-circle"
                         aria-haspopup="true" aria-expanded="false">
                    <i class="bi bi-person h4"></i>
                </button>
            }
            <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="dropdown-item" href="/profile">Профиль</a>
                <div class="dropdown-divider"></div>
                <a @onclick="LogoutClick" class="dropdown-item" href="/">Выход</a>
            </div>
        </div>
    </div>
</nav>


@code {


    [Inject]
    public NavigationManager? NavigationManager { get; private set; }

    private User? CurrentUser;

    public List<Deck> Decks { get; set; } = new List<Deck>();

    public string Query { get; private set; } = String.Empty;

    public int CardsLearnCount { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {
        CurrentUser = await loginService.GetCurrentUser();
        Decks = await libraryService.GetCurrentUserDecks(CurrentUser);
        CalculateCardsLearnCount();
    }

    private void CalculateCardsLearnCount()
    {
        foreach (var deck in Decks)
        {
            foreach (var card in deck.Cards)
            {
                if (card.NextAppear <= DateTime.Today)
                {
                    CardsLearnCount++;
                }
            }
        }
    }

    private async Task QueryConfirm(KeyboardEventArgs e)
    {
        if (e.Code == "Enter")
        {
            NavigationManager.NavigateTo($"search/?query={Query}", false);
        }
    }

    private void GoToAuthPage()
    {
        NavigationManager.NavigateTo($"auth/", false);
    }

    public void LogoutClick()
    {
        loginService.Logout();
        NavigationManager.NavigateTo("/", true);
    }
}
